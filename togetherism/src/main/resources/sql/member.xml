<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberns">

	<!-- email 중복 체크 -->
    <select id="member_emailcheck" parameterType="String" resultType="member">
     	select * from member where member_email=#{member_email} and member_del_yn='N'
    </select>
    
    <!-- 닉네임 중복 체크 -->
    <select id="member_nickcheck" parameterType="String" resultType="member">
     	select * from member where member_nickname=#{member_nickname} and member_del_yn='N'
    </select>
    
    <!-- 이메일 검색 -->
    <select id="member_emailfind" parameterType="member" resultType="member" >
	     select * from member where member_nickname=#{member_nickname} and member_mobile1=#{member_mobile1}
	     and member_mobile2=#{member_mobile2} and member_mobile3=#{member_mobile3} and member_del_yn='N'
    </select>
    
    <!-- 비번 검색 -->
    <select id="member_pwfind" parameterType="member" resultType="member" >
	     select * from member where member_email=#{member_email} and member_mobile1=#{member_mobile1}
	     and member_mobile2=#{member_mobile2} and member_mobile3=#{member_mobile3} and member_del_yn='N'
    </select>

    <!-- 회원저장 -->
    <insert id="member_insert" parameterType="member">
	     insert into member (member_email,member_nickname,member_pw,member_image,member_mobile1,
	     member_mobile2,member_mobile3,member_region,member_reg_date,member_del_yn) values(#{member_email},
	     #{member_nickname},#{member_pw},#{member_image},
	     #{member_mobile1},#{member_mobile2},#{member_mobile3},#{member_region},sysdate,'N')
    </insert>
    
    <!-- 유저 검색 -->
    <select id="member_usercheck" parameterType="String" resultType="member">
     	select * from member where member_email=#{email} and member_del_yn='N'
    </select>
    
     <!-- 회원정보 수정 -->
    <update id="member_edit" parameterType="member">
	     update member set member_nickname=#{member_nickname},
	     member_pw=#{member_pw},member_image=#{member_image},
	     member_mobile1=#{member_mobile1},member_mobile2=#{member_mobile2},member_mobile3=#{member_mobile3},
	     member_region=#{member_region} where member_email=#{member_email}
    </update>
    
    <!-- 모임가입 테이블에서 모임장 여부 검색 -->
    <select id="member_hostCheck" parameterType="String" resultType="club_member_join">
     	select * from club_member_join where member_email=#{email} and club_host_yn='Y'
    </select>
    
    <!-- 모임가입 테이블 모임 가입 정보 삭제 -->
    <delete id="club_member_join_delete" parameterType="String" >
		delete from club_member_join where member_email=#{email}    
    </delete>
    
    <!-- 탈퇴하는 회원이 가입한 모임들의 현재 정원을 -1명 시키기-->
    <update id="reduce_Clubmemeber" parameterType="String">
    	update club set club_member_count = club_member_count-1 where club_num in
    		(select club_num from club_member_join where member_email=#{email})
    </update>
    
    <!-- 좋아요 테이블 좋아요 정보 삭제 -->
    <delete id="heart_delete" parameterType="String">
		delete from heart where member_email=#{email}    
    </delete>
    
    <!-- 이벤트 참석 테이블 참석 정보 삭제 -->
    <delete id="event_attend_delete" parameterType="String">
		delete from event_user_attend where member_email=#{email}    
    </delete>
	
	<!-- 회원정보 삭제 -->
    <update id="member_delete" parameterType="member">
	      update member set member_del_reason=#{member_del_reason}, member_del_yn='Y',
	      member_del_date=sysdate where member_email=#{member_email}
    </update>
</mapper>





















